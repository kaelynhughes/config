prompt_git_branch() {
    autoload -Uz vcs_info
    precmd_vcs_info() { vcs_info }
    precmd_functions+=( precmd_vcs_info )
    setopt prompt_subst
    zstyle ':vcs_info:git:*' formats '%b'
}

git_prompt_status() {
    local INDEX STATUS
    INDEX=$(command git status --porcelain -b 2> /dev/null)
    STATUS=""

    if $(echo "$INDEX" | command grep -E '^\?\? ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_UNTRACKED$STATUS"
    fi

    if $(echo "$INDEX" | grep '^A  ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$STATUS"
    elif $(echo "$INDEX" | grep '^M  ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$STATUS"
    elif $(echo "$INDEX" | grep '^MM ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$STATUS"
    fi

    if $(echo "$INDEX" | grep '^ M ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
    elif $(echo "$INDEX" | grep '^AM ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
    elif $(echo "$INDEX" | grep '^MM ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
    elif $(echo "$INDEX" | grep '^ T ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
    fi

    if $(echo "$INDEX" | grep '^R  ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_RENAMED$STATUS"
    fi

    if $(echo "$INDEX" | grep '^ D ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
    elif $(echo "$INDEX" | grep '^D  ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
    elif $(echo "$INDEX" | grep '^AD ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
    fi

    if $(command git rev-parse --verify refs/stash >/dev/null 2>&1); then
        STATUS="$ZSH_THEME_GIT_PROMPT_STASHED$STATUS"
    fi

    if $(echo "$INDEX" | grep '^UU ' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_UNMERGED$STATUS"
    fi

    if $(echo "$INDEX" | grep '^## [^ ]\+ .*ahead' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_AHEAD$STATUS"
    fi

    if $(echo "$INDEX" | grep '^## [^ ]\+ .*behind' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_BEHIND$STATUS"
    fi

    if $(echo "$INDEX" | grep '^## [^ ]\+ .*diverged' &> /dev/null); then
        STATUS="$ZSH_THEME_GIT_PROMPT_DIVERGED$STATUS"
    fi

    if [[ ! -z "$STATUS" ]]; then
        echo "$STATUS"
    fi
}

git_prompt_info() {
    [ ! -z "$vcs_info_msg_0_" ] && echo "$ZSH_THEME_GIT_PROMPT_PREFIX$vcs_info_msg_0_$ZSH_THEME_GIT_PROMPT_SUFFIX"
}

prompt_original_setup() {
    ZSH_THEME_GIT_PROMPT_PREFIX="%B%F{blue}["
    ZSH_THEME_GIT_PROMPT_SUFFIX="%B%F{blue}]%f%b"

    ZSH_THEME_GIT_PROMPT_DIRTY="%F{red} ✖%f"
    ZSH_THEME_GIT_PROMPT_CLEAN="%F{green} ✔%f"

    ZSH_THEME_GIT_PROMPT_ADDED="%F{green} ✚"
    ZSH_THEME_GIT_PROMPT_MODIFIED="%F{blue} ✹"
    ZSH_THEME_GIT_PROMPT_DELETED="%F{red} ✖"
    ZSH_THEME_GIT_PROMPT_RENAMED="%F{magenta} ➜"
    ZSH_THEME_GIT_PROMPT_UNMERGED="%F{yellow} ═"
    ZSH_THEME_GIT_PROMPT_UNTRACKED="%F{cyan} ✭"

    ZSH_THEME_GIT_PROMPT_EQUAL_REMOTE=""
    ZSH_THEME_GIT_PROMPT_AHEAD_REMOTE="%F{blue}] %F{cyan}» %f"

    autoload -Uz add-zsh-hook
    autoload -Uz colors && colors
    PROMPT="%B%(?:%F{green}:%F{red}) ›%b%f "
    PROMPT+=' %B%F{cyan}%c%f%b '

    prompt_git_branch
    RPROMPT='$(git_prompt_info)$(git_prompt_status)'
    zstyle ':vcs_info:git:*' formats '%s:%b%u'
    zstyle ':vcs_info:git:*' check-for-changes true
    zstyle ':vcs_info:git:*' unstagedstr "%F{red}$ZSH_THEME_GIT_PROMPT_DIRTY%f"
} 

prompt_original_setup
